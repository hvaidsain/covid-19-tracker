{"version":3,"sources":["components/Cards/cards.module.css","components/ProgressLoader/spinner.jsx","components/Cards/cards.jsx","api/index.js","components/Chart/chart.jsx","components/Country/country.jsx","components/footer/footer.jsx","App.js","index.js","components/Chart/chart.module.css","App.module.css","components/ProgressLoader/spinner.module.css","components/Country/country.module.css","components/footer/footer.module.css","images/covid1.png"],"names":["module","exports","Spinner","className","styles","container","CircularProgress","Cards","props","data","confirmed","recovered","deaths","lastupdate","console","log","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","moment","startOf","fromNow","baseUrl","fetchData","country","a","dynamicUrl","axios","get","actualData","lastUpdate","response","getDailyData","getAllCountries","Charts","useState","dailyData","setDailyData","getAllData","useEffect","length","map","reportDate","total","barChart","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","legend","display","maintainAspectRatio","title","text","doughnut","Country","countries","setCountries","getCountries","FormControl","formControl","NativeSelect","onChange","e","handleCountryChange","target","i","key","name","Footer","App","state","respose","setState","this","src","image1","alt","image","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be147f18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__20HSP\",\"card\":\"cards_card__3UreD\",\"infected\":\"cards_infected__2GxDy\",\"recovered\":\"cards_recovered__2z1Yh\",\"deaths\":\"cards_deaths__2WjQc\"};","import React from 'react'\nimport styles from './spinner.module.css'\nimport {CircularProgress} from \"@material-ui/core\";\n\nconst Spinner = ()=>{\n\n\n    return(\n        <div className={styles.container} >\n            <CircularProgress />\n        </div>\n    )\n}\n\nexport default Spinner;","import React from 'react'\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport moment from 'moment'\nimport styles from './cards.module.css'\nimport cx from \"classnames\"\nimport Spinner from \"../ProgressLoader/spinner\"\n\n\n\n\nconst Cards = (props) => {\n    const { confirmed, recovered, deaths, lastupdate } = props.data\n\n    if (!confirmed) {\n        return null\n    }\n    console.log(props.data)\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={2} justify='center' >\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)} >\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={confirmed.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography variant='body2' >Active Cases of Covid-19</Typography>\n                        <Typography color='textSecondary' >updated {moment(lastupdate).startOf('hour').fromNow()} </Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)} >\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={recovered.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography variant='body2' >Recoveries from Covid-19</Typography>\n                        <Typography color='textSecondary' >updated {moment(lastupdate).startOf('hour').fromNow()}</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)} >\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={deaths.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography variant='body2' >Deaths due to Covid-19</Typography>\n                        <Typography color='textSecondary' >updated {moment(lastupdate).startOf('hour').fromNow()}</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios'\n\nconst baseUrl = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) =>{\n    try {\n\n        let dynamicUrl = baseUrl\n        if(country){\n            dynamicUrl = `${baseUrl}/countries/${country}`\n        }\n        const {data} = await axios.get(dynamicUrl);\n        const actualData = {\n            confirmed:data.confirmed,\n            recovered:data.recovered,\n            deaths:data.deaths,\n            lastupdate:data.lastUpdate\n        }\n        return actualData;\n    } catch (error) {\n        console.log(error)\n        return error.response\n    }\n}\n\nexport const getDailyData = async()=>{\n    try {\n        const {data} = await axios.get(`${baseUrl}/daily`);\n        console.log(data);\n        return data\n        \n    } catch (error) {\n        console.log(error)\n        return error.response\n    }\n}\n\nexport const getAllCountries = async()=>{\n    try {\n        const {data} = await axios.get(`${baseUrl}/countries`);\n        console.log(data);\n        return data\n    } catch (error) {\n        console.log(error)\n        return error.response\n    }\n}","import React,{useEffect,useState} from 'react';\nimport {getDailyData} from '../../api/index'\nimport {Line,Bar,Doughnut} from 'react-chartjs-2'\nimport styles from './chart.module.css'\n\nconst Charts = (props)=>{\n\n    const [dailyData,setDailyData] = useState([]);\n    const { confirmed, recovered, deaths, lastupdate } = props.data\n\n    const getAllData = async () =>{\n        const response = await getDailyData();\n        setDailyData(response)\n        console.log(response)\n    }\n\n    useEffect(()=>{\n        getAllData();\n    },[])\n\n    const lineChart = (\n        dailyData.length &&\n        (\n            <Line\n            data={{\n                labels:dailyData.map(({reportDate})=>(reportDate)),\n                datasets:[{\n                    data:dailyData.map(({confirmed})=>(confirmed.total)),\n                    lineTension: 0.1,\n                    label:\"Infected\",\n                    borderColor:'rgba(0,0,255,0.5)',\n                    fill:true\n                },{\n                    data:dailyData.map(({deaths})=>(deaths.total)),\n                    lineTension: 0.1,\n                    label:\"Deaths\",\n                    borderColor:'red',\n                    backgroundColor:'rgba(255,0,0,0.5)',\n                    fill:true\n                }]\n            }}\n\n            />\n        )\n    )\n\n    const barChart = \n    confirmed &&\n        (\n        <Bar\n        data={{\n            // labels:dailyData.map(({reportDate})=>(reportDate)).splice(0,50),\n            labels:[\"Total Infected\",\"Total Recovered\",\"Total Deaths\"],\n\n            datasets:[{\n                label:\"People\",\n                // data:dailyData.map(({confirmed})=>(confirmed.total)).splice(0,50),\n                data:[confirmed.value,recovered.value,deaths.value],\n                backgroundColor: ['rgba(255,255,0,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)',],\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: ['rgba(255,255,0)','rgba(0,255,0)','rgba(255,0,0)'],\n                hoverBorderColor: 'rgba(255,99,132,1)'\n            }]\n        }}\n        options={{\n            legend:{display:false},\n            maintainAspectRatio: true,\n            title:{display:true,text:props.country || \"Global\"}\n\n          }}\n        />\n        \n        )\n    \n\n    const doughnut = (\n        confirmed &&\n        (\n            <Doughnut\n            data={{\n                labels: [\n                    'Infected',\n                    'Deaths',\n                    'Recovered'\n                ],\n                datasets: [{\n                    data: [confirmed.value,deaths.value,recovered.value],\n                    backgroundColor: [\n                    '#FFCE56',\n                    '#FF6384',\n                    '#006400'\n                    ],\n                    hoverBackgroundColor: [\n                    '#FFCE56',\n                    '#FF6384',\n                    '#006400'\n                    ]\n                }]\n            }}\n            options={{\n                legend:{display:false},\n                maintainAspectRatio: true,\n                title:{display:true,text:props.country || \"Global\"}\n    \n              }}\n            \n            />\n        )\n    )\n\n    return(\n        <div className={styles.container}>\n            {doughnut}\n            <br></br>\n            <br></br>\n            {barChart}\n            {/* {lineChart} */}\n        </div>\n    )\n}\n\nexport default Charts;","import React,{useState,useEffect} from 'react'\nimport {Select,FormControl,NativeSelect} from '@material-ui/core'\nimport styles from \"./country.module.css\"\nimport {getAllCountries} from \"../../api/index\"\n\n\nconst Country = (props)=>{\n\n    const [countries,setCountries] = useState([])\n\n    const getCountries = async()=>{\n        const response = await getAllCountries();\n        console.log(\"countries\",response.countries)\n        setCountries(response.countries)\n    }\n    \n\n    useEffect(()=>{\n        getCountries();\n    },[])\n\n\n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect onChange={(e)=>props.handleCountryChange(e.target.value)} >\n                <option value='' >global</option>\n                {countries.map((country,i)=> <option key={i} value={country.name} >{country.name}</option> )}\n            </NativeSelect>\n        </FormControl>\n    )\n} \n\nexport default Country;","import React from 'react'\nimport styles from './footer.module.css'\n\n\nconst Footer = ()=>{\n\n\n    return(\n        <div className={styles.container} >\n            Made with &#9825; by Harsh Vaidsain\n        </div>\n    )\n}\n\nexport default Footer;","import React , {Component} from 'react'\nimport {Cards,CountryPicker,Chart,Piechart,Footer} from \"./components/index\"\nimport styles from './App.module.css'\nimport {fetchData} from \"./api/index\"\nimport image1 from \"./images/covid1.png\"\nimport Spinner from \"./components/ProgressLoader/spinner\"\n\nclass App extends Component {\n\n    state = {\n        data : null,\n        country:\"\"\n    }\n\n    async componentDidMount(){\n        const respose = await fetchData()\n        this.setState({\n            data:respose\n        })\n        // console.log(respose)\n    }\n\n    handleCountryChange = async(country)=>{\n        console.log(country);\n        const respose = await fetchData(country)\n        this.setState({\n            data:respose,\n            country:country\n        })\n    }\n    \n    render(){\n        console.log(this.state.data)\n        const {data,country} = this.state\n        return (\n            this.state.data ? (\n                <div className={styles.container}>\n                    {/* <Piechart data={data}/> */}\n                    <img src={image1} alt=\"COVID-19\" className={styles.image} ></img>\n                    <Cards data={data}/>\n                    <CountryPicker handleCountryChange={this.handleCountryChange} />\n                    <Chart data={data} country={country}/>\n                    <Footer/>\n            </div>\n            ):(<Spinner/>)\n            \n            \n        )\n    }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App/>,document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__3jxo6\",\"pieContainer\":\"chart_pieContainer__23QrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"spinner_container__5eoF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"country_formControl__OVNGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__a7Ksf\"};","module.exports = __webpack_public_path__ + \"static/media/covid1.8d8060d0.png\";"],"sourceRoot":""}